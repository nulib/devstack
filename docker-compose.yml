---
version: '3.4'
volumes:
  fedora:
  db:
  es:
  ldap:
  localstack:
  solr:
services:
  iiif:
    depends_on:
    - localstack
    image: nulib/iiif-express
    restart: unless-stopped
    read_only: true
    volumes:
    - type: bind
      source: $HOME/.devbox_cert/dev.rdc.wildcard.full.pem
      target: /home/node/.certs/public.crt
    - type: bind
      source: $HOME/.devbox_cert/dev.rdc.wildcard.key.pem
      target: /home/node/.certs/private.key
    - type: volume
      target: /tmp
    - type: volume
      target: /var/run
    ports:
    - 8183:8183
    environment:
      TIFF_BUCKET: dev-pyramids
      S3_ENDPOINT: http://localstack:4566/
      AWS_ACCESS_KEY_ID: minio
      AWS_SECRET_ACCESS_KEY: minio123
      SSL_CERT: /home/node/.certs/public.crt
      SSL_KEY: /home/node/.certs/private.key
      PORT: 8183
    healthcheck:
      test:
      - CMD
      - curl
      - https://iiif.dev.rdc.library.northwestern.edu:8183/iiif/2
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      default:
        aliases:
          - iiif.dev.rdc.library.northwestern.edu
  db:
    image: postgres:10-alpine
    restart: unless-stopped
    read_only: true
    volumes:
    - type: volume
      source: db
      target: /data
    - type: volume
      target: /tmp
    - type: volume
      target: /var/log
    - type: volume
      target: /var/run
    environment:
    - PGDATA=/data
    - POSTGRES_USER=docker
    - POSTGRES_PASSWORD=d0ck3r
    ports:
    - 5433:5432
    command: postgres -c max_connections=300
    healthcheck:
      test: |
        CMD echo 'SELECT 1' | \
          PGPASSWORD=d0ck3r psql --host 127.0.0.1 --username docker \
          --dbname docker --quiet --no-align --tuples-only
      interval: 30s
      timeout: 5s
      retries: 3
  elasticproxy:
    depends_on:
    - elasticsearch
    image: nulib/elasticproxy:latest
    restart: unless-stopped
    read_only: true
    volumes:
    - type: volume
      target: /home/node
    - type: bind
      source: $HOME/.devbox_cert/dev.rdc.wildcard.full.pem
      target: /home/node/.certs/public.crt
    - type: bind
      source: $HOME/.devbox_cert/dev.rdc.wildcard.key.pem
      target: /home/node/.certs/private.key
    - type: volume
      target: /tmp
    - type: volume
      target: /var/log
    - type: volume
      target: /var/run
    ports:
    - 3334:3334
    networks:
      default:
        aliases:
          - dcapi.dev.rdc.library.northwestern.edu
    environment:
      UPSTREAM: http://elasticsearch:9200/
      AWS_ACCESS_KEY_ID: fake_key_id
      AWS_SECRET_ACCESS_KEY: fake_access_key
      API_TOKEN_HEADER: X-Api-Token
      API_TOKEN_SECRET: ab00ffc725da64fa07b20f42ed8bbcf0fda5779aa55c90cedf3a81e09e3a2b14
      NUSSO_BASE_URL: ${SETTINGS__NUSSO__BASE_URL}
      NUSSO_API_KEY: ${SETTINGS__NUSSO__CONSUMER_KEY}
      SSL_CERT: /home/node/.certs/public.crt
      SSL_KEY: /home/node/.certs/private.key
    healthcheck:
      test:
      - CMD
      - curl
      - https://dcapi.dev.rdc.library.northwestern.edu:3334/auth/whoami
      interval: 30s
      timeout: 5s
      retries: 3
  elasticsearch:
    image: bitnami/elasticsearch:6.8.14
    restart: unless-stopped
    read_only: true
    volumes:
    - type: volume
      source: es
      target: /bitnami/elasticsearch/data
    - type: volume
      target: /tmp
    - type: volume
      target: /opt/bitnami/elasticsearch
    - type: volume
      target: /var/log
    - type: volume
      target: /var/run
    - ./extras/elasticsearch/elasticsearch.yml:/opt/bitnami/elasticsearch/config/elasticsearch.yml
    ports:
    - 9201:9200
    environment:
      ELASTICSEARCH_HEAP_SIZE: "256m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    healthcheck:
      test:
      - CMD
      - curl
      - "-f"
      - http://localhost:9200/
      interval: 30s
      timeout: 5s
      retries: 3
  fedora:
    image: samvera/fcrepo4:4.7.5
    restart: unless-stopped
    read_only: true
    volumes:
    - type: volume
      source: fedora
      target: /data
    - type: volume
      target: /tmp
    - type: volume
      target: /var/lib/jetty
    - type: volume
      target: /var/log
    - type: volume
      target: /var/run
    ports:
    - 8984:8080
  hls:
    depends_on:
    - localstack
    image: avalonmediasystem/nginx:minio
    environment:
    - AVALON_DOMAIN=http://host.docker.internal:3000
    - AVALON_STREAMING_BUCKET_URL=https://devbox.library.northwestern.edu:4566/derivatives/
    ports:
    - '8880:80'
  kibana:
    depends_on:
    - elasticsearch
    image: docker.elastic.co/kibana/kibana-oss:6.3.2
    restart: unless-stopped
    ports:
    - 5602:5601
    healthcheck:
      test:
      - CMD
      - curl
      - "-f"
      - http://localhost:5601/
      interval: 30s
      timeout: 5s
      retries: 3
  ldap:
    image: nulib/ldap-alpine
    restart: unless-stopped
    volumes:
      - type: volume
        source: ldap
        target: /var/lib/samba
    ports:
      - 390:389
      - 637:636
    environment:
      DOMAIN: library.northwestern.edu
      DOMAINPASS: d0ck3rAdm1n!
      INSECURELDAP: "true"
      NOCOMPLEXITY: "true"
    healthcheck:
      test:
      - CMD
      - echo
      - ""
      - "|"
      - nc
      - localhost
      - "389"
      interval: 30s
      timeout: 5s
      retries: 3
  localstack:
    image: localstack/localstack
    restart: unless-stopped
    volumes:
      - localstack:/data
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./extras/localstack/aws:/root/.aws:ro
      - ./extras/localstack/scripts:/tmp/scripts:ro
      - "${TMPDIR:-/tmp}/localstack_dev:/tmp/localstack"
    ports:
      - 127.0.0.1:53:53
      - 127.0.0.1:53:53/udp
      - 127.0.0.1:443:443
      - 127.0.0.1:4510-4559:4510-4559
      - 127.0.0.1:4566:4566
    environment:
      DATA_DIR: /data
      DEBUG: ${LOCALSTACK_DEBUG:-}
      DISABLE_CORS_CHECKS: 1
      DNS_ADDRESS: 127.0.0.1
      DOCKER_HOST: unix:///var/run/docker.sock
      EDGE_PORT: 4566
      EDGE_PORT_HTTP: 4566
      LAMBDA_DOCKER_NETWORK: devstack_default
      LAMBDA_EXECUTOR: docker-reuse
      LOCALSTACK_API_KEY: ${LOCALSTACK_API_KEY:-}
      LS_LOG: ${LS_LOG:-}
    healthcheck:
      test: 
        - CMD
        - /tmp/scripts/healthcheck.sh
      interval: 30s
      timeout: 30s
      retries: 5
  redis:
    image: redis:alpine
    restart: unless-stopped
    read_only: true
    volumes:
    - type: volume
      target: /tmp
    - type: volume
      target: /var/log
    - type: volume
      target: /var/run
    ports:
    - 6380:6379
    healthcheck:
      test:
      - CMD
      - redis-cli
      - ping
      interval: 30s
      timeout: 5s
      retries: 3
  solr:
    image: solr:7.2-alpine
    restart: unless-stopped
    read_only: true
    volumes:
    - type: volume
      source: solr
      target: /opt/solr/server/solr
    - type: volume
      target: /opt/solr/server
    - type: volume
      target: /tmp
    - type: volume
      target: /var/log
    - type: volume
      target: /var/run
    ports:
    - 8983:8983
    - 9983:9983
    command: solr -f -cloud
    healthcheck:
      test:
      - CMD
      - wget
      - "-O"
      - "/dev/null"
      - http://localhost:8983/solr/
      interval: 30s
      timeout: 5s
      retries: 3
